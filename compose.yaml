version: '3.8'

services:
  redis:
    image: redis
    restart: always
    command: redis-server --appendonly yes
    ports:
      - $REDIS_LOCAL_PORT:$REDIS_DOCKER_PORT

  elasticsearch:
    image: elasticsearch:7.17.15
    ports:
      - $ELASTIC_SEARCH_HTTP_PORT:$ELASTIC_SEARCH_HTTP_PORT
      - $ELASTIC_SEARCH_CLUSTER_PORT:$ELASTIC_SEARCH_CLUSTER_PORT
    environment:
      - 'discovery.type=single-node'
    cpus: 0.75
    mem_limit: 500m
    networks:
      - elastic
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.15
    ports:
      - $KIBANA_LOCAL_PORT:$KIBANA_DOCKER_PORT
    environment:
      ELASTICSEARCH_URL: $ELASTIC_SEARCH_HOST
      # - ELASTIC_USERNAME=elastic
      # - ELASTIC_PASSWORD=elasticsearch
      # - xpack.security.enabled=true
    links:
      - elasticsearch
    cpus: 0.75
    mem_limit: 500m
    networks:
      - elastic
    depends_on:
      - elasticsearch

  postgresdb:
    image: postgres
    env_file: ./.env
    environment:
      - POSTGRES_USER=$DATABASE_USERNAME
      - POSTGRES_PASSWORD=$DATABASE_PASSWORD
      - POSTGRES_DB=$DATABASE_NAME
    ports:
      - $DATABASE_LOCAL_PORT:$DATABASE_DOCKER_PORT
    volumes:
      - pgdata:/var/lib/postgresql/data

  app:
    working_dir: /app
    build:
      context: .
      args:
        - NODE_ENV=dev
    # entrypoint: ['/bin/sh', './entrypoint.sh']
    depends_on:
      - redis
      - elasticsearch
      - postgresdb
    restart: unless-stopped
    environment:
      - DATABASE_URL=$DATABASE_URL
      - REDIS_URL=$REDIS_URL
      - ELASTIC_SEARCH_HOST=$ELASTIC_SEARCH_HOST
      - JWT_SECRET=$JWT_SECRET
    ports:
      - $NODE_LOCAL_PORT:$NODE_LOCAL_PORT
    volumes:
      - .:/app

volumes:
  pgdata:
  elasticsearch_data:
    driver: local

networks:
  elastic:
    driver: bridge
