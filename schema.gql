# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Comment {
  id: Float!
  parent: Comment
  post: Post!
  replies: [Comment!]
  text: String
  user: User!
}

input CommentInput {
  postId: Int
  text: String!
}

input LoginInput {
  email: String!
  password: String!
}

type LoginResponse {
  token: String!
  user: User!
}

type Mutation {
  addReplyToComment(data: ReplyInput!): Comment!
  createComment(data: CommentInput!): Comment!
  createPost(data: postInput!): SuccessResponse!
  deleteCommentByPost(postId: Int!): SuccessResponse!
  deletePost(id: Int!): SuccessResponse!
  login(loginData: LoginInput!): LoginResponse!
  register(createUser: UserInput!): LoginResponse!
  updateComment(data: CommentInput!, id: Int!): SuccessResponse!
  updatePost(data: postInput!, id: Int!): SuccessResponse!
}

type Post {
  comments: [Comment!]
  content: String!
  id: Float!
  status: PostStatus!
  title: String!
  user: User
}

enum PostStatus {
  DRAFT
  PUBLISHED
}

type Query {
  Comment(postId: Int!): Comment!
  getComment(itemsPerPage: Int! = 10, page: Int! = 1, postId: Int!): [Comment!]!
  getPost(id: Int!): Post!
  getRepliesOfComment(commentId: Int!, itemsPerPage: Int! = 10, page: Int! = 1): [Comment!]!
  hello: String!
  listComments: [Comment!]!
  listPosts: [Post!]!
  paginatedPosts(itemsPerPage: Int! = 10, page: Int! = 1): [Post!]!
  search(input: String!): [Post!]!
  user(email: String!): User!
}

input ReplyInput {
  commentId: Int
  postId: Int
  text: String!
}

type SuccessResponse {
  id: Float
  message: String
  success: Boolean
}

type User {
  comments: [Comment!]!
  email: String!
  firstName: String!
  id: Float!
  lastName: String!
  password: String!
  posts: [Post!]!
}

input UserInput {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
}

input postInput {
  content: String!
  title: String!
}